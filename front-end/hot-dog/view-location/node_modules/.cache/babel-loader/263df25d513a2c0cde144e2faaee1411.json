{"ast":null,"code":"var _jsxFileName = \"/Users/hannanegash/Desktop/view_location/AD320_Project/front-end/hot-dog/view-location/src/Table.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Container from '@material-ui/core/Container';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport AddIcon from '@material-ui/icons/Add';\nimport SendIcon from '@material-ui/core/Icon';\nimport { v4 as uuidv4 } from 'uuid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Icon } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1)\n    }\n  },\n  button: {\n    margin: theme.spacing(1)\n  }\n}));\n\nfunction Table() {\n  _s();\n\n  const classes = useStyles();\n  const [inputField, setInputField] = useState([{\n    type: '',\n    lati: '',\n    longi: '',\n    address: ''\n  }]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(\"InputFields\", inputFields);\n  };\n\n  const handleChangeInput = (id, event) => {\n    const newInputFields = inputFields.map(i => {\n      if (id === i.id) {\n        i[event.target.name] = event.target.value;\n      }\n\n      return i;\n    });\n    setInputFields(newInputFields);\n  };\n\n  const handleAddFields = () => {\n    setInputFields([...inputFields, {\n      id: uuidv4(),\n      firstName: '',\n      lastName: ''\n    }]);\n  };\n\n  const handleRemoveFields = id => {\n    const values = [...inputFields];\n    values.splice(values.findIndex(value => value.id === id), 1);\n    setInputFields(values);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Add New Locations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.root,\n      children: [inputField.map((inputField, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          name: \"type\",\n          label: \"Name\",\n          variant: \"filled\",\n          value: inputField.type,\n          onChange: event => handleChangeInput(inputField.id, event)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"lati\",\n          label: \"Latitude (Address then N/A)\",\n          variant: \"filled\",\n          value: inputField.lati,\n          onChange: event => handleChangeInput(inputField.id, event)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"longi\",\n          label: \"Longitude (Address then N/A)\",\n          variant: \"filled\",\n          value: inputField.longi,\n          onChange: event => handleChangeInput(inputField.id, event)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"address\",\n          label: \"Address (N/A instead)\",\n          variant: \"filled\",\n          value: inputField.address,\n          onChange: event => handleChangeInput(inputField.id, event)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          children: /*#__PURE__*/_jsxDEV(RemoveIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.button,\n        variant: \"contained\",\n        color: \"primary\",\n        type: \"submit\",\n        endIcon: /*#__PURE__*/_jsxDEV(SendIcon, {\n          children: \"send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 25\n        }, this),\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Table, \"JGetTAvN7UyfshtaxPmJwPIgnIw=\", false, function () {\n  return [useStyles];\n});\n\n_c = Table;\nexport default Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["/Users/hannanegash/Desktop/view_location/AD320_Project/front-end/hot-dog/view-location/src/Table.js"],"names":["React","useState","Container","TextField","Button","IconButton","RemoveIcon","AddIcon","SendIcon","v4","uuidv4","makeStyles","Icon","useStyles","theme","root","margin","spacing","button","Table","classes","inputField","setInputField","type","lati","longi","address","handleSubmit","e","preventDefault","console","log","inputFields","handleChangeInput","id","event","newInputFields","map","i","target","name","value","setInputFields","handleAddFields","firstName","lastName","handleRemoveFields","values","splice","findIndex","index"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Container from '@material-ui/core/Container';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport AddIcon from '@material-ui/icons/Add';\nimport SendIcon from '@material-ui/core/Icon';\nimport { v4 as uuidv4 } from 'uuid';\n\n\n\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Icon } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n       '& .MuiTextField-root':{\n           margin: theme.spacing(1),\n\n       },\n    },\n\n    button: {\n        margin: theme.spacing(1),\n      }\n\n}))\n\n\nfunction Table() {  \n    const classes = useStyles();\n    const [inputField, setInputField] = useState([\n        { type: '', lati: '', longi: '', address: ''},\n        \n    ]);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(\"InputFields\", inputFields);\n      };\n    \n      const handleChangeInput = (id, event) => {\n        const newInputFields = inputFields.map(i => {\n          if(id === i.id) {\n            i[event.target.name] = event.target.value\n          }\n          return i;\n        })\n        \n        setInputFields(newInputFields);\n      }\n    \n      const handleAddFields = () => {\n        setInputFields([...inputFields, { id: uuidv4(),  firstName: '', lastName: '' }])\n      }\n    \n      const handleRemoveFields = id => {\n        const values  = [...inputFields];\n        values.splice(values.findIndex(value => value.id === id), 1);\n        setInputFields(values);\n      }\n\n  return(\n\n    <Container>\n        \n        <h1>Add New Locations</h1>\n        \n        <form className={classes.root}>\n            { inputField.map((inputField, index) => (\n                <div key={index}>\n\n                    <TextField\n                       name= \"type\"\n                       label= \"Name\"\n                       variant='filled'\n                       value={inputField.type}\n                       onChange={event => handleChangeInput(inputField.id, event)}\n                    />\n\n                    <TextField\n                       name= \"lati\"\n                       label= \"Latitude (Address then N/A)\"\n                       variant='filled'\n                       value={inputField.lati}\n                       onChange={event => handleChangeInput(inputField.id, event)}\n                    />\n\n                    <TextField\n                       name= \"longi\"\n                       label= \"Longitude (Address then N/A)\"\n                       variant='filled'\n                       value={inputField.longi}\n                       onChange={event => handleChangeInput(inputField.id, event)}\n                    />\n\n                    <TextField\n                       name= \"address\"\n                       label= \"Address (N/A instead)\"\n                       variant='filled'\n                       value={inputField.address}\n                       onChange={event => handleChangeInput(inputField.id, event)}\n                    />\n\n                    <IconButton>\n                        <AddIcon />\n                    </IconButton>\n\n                    <IconButton>\n                        <RemoveIcon />\n                    </IconButton>\n\n                </div>\n            ))}\n\n            <Button \n               className={classes.button}\n               variant='contained'\n               color='primary' \n               type='submit' \n               endIcon={<SendIcon>send</SendIcon>}>Send</Button>\n\n        </form>\n\n    </Container>    \n\n  );\n\n}\n\n\nexport default Table;\n\n\n"]},"metadata":{},"sourceType":"module"}